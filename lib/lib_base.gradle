apply plugin: 'com.android.library'

def C_SDK = 28
def M_SDK = 21
def T_SDK = 28
def V_CODE = 1
def V_NAME = "1.0"

def _kotlin_version = hasProperty("kotlin_version") ? ext.kotlin_version : '1.3.10'

def _use_proguard_debug = hasProperty("use_proguard_debug") ? (ext.use_proguard_debug == "true") : false
def _minify_enabled_debug = hasProperty("minify_enabled_debug") ? (ext.minify_enabled_debug == "true") : false
def _use_proguard = hasProperty("use_proguard") ? (ext.use_proguard == "true") : _use_proguard_debug
def _minify_enabled = hasProperty("minify_enabled") ? (ext.minify_enabled == "true") : _minify_enabled_debug


//println "kotlin版本:" + _kotlin_version
//println project.getName()
//println project.getDisplayName()
//println project.getChildProjects()
//println rootProject.getDisplayName()
//println rootProject.getChildProjects()
//println 'all:'
//println rootProject.allprojects
//println 'sub:'
//println rootProject.subprojects

//classpath 'com.android.tools.build:gradle:3.2.1'
//gradle-4.6-all.zip

def childProjects = rootProject.getChildProjects()
childProjects.each {
    //println it.key
    //println it.value
    def application = "com.android.application"
    def library = "com.android.library"

    def projectObj = it.value
    def isApp = projectObj.plugins.hasPlugin(application)
    def isLib = projectObj.plugins.hasPlugin(library)

    if (isApp) {
        def applicationPlugin = projectObj.plugins.findPlugin(application)
        //自动获取 主工程的 sdk配置信息
        //println applicationPlugin.extension.defaultConfig.applicationId
        M_SDK = applicationPlugin.extension.defaultConfig.minSdkVersion.apiLevel
        T_SDK = applicationPlugin.extension.defaultConfig.targetSdkVersion.apiLevel
        C_SDK = applicationPlugin.extension.compileSdkVersion
    }
}

android {
    compileSdkVersion C_SDK

    defaultConfig {
        minSdkVersion M_SDK
        targetSdkVersion T_SDK
        versionCode V_CODE
        versionName V_NAME

        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled _minify_enabled
            useProguard _use_proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled _minify_enabled_debug
            useProguard _use_proguard_debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$_kotlin_version"
}
